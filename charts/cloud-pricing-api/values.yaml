# Default values for cloud-pricing-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Use the [Infracost CLI](https://github.com/infracost/infracost/blob/master/README.md#quick-start) `infracost auth login` command to get an API key so your self-hosted Cloud Pricing API can download the latest pricing data from us.
infracostAPIKey: ""
# -- If you'd rather use your own secret you can leave the above empty and instead specify the name of your secret below
existingSecretAPIKey: ""

image:
  # -- Cloud Pricing API image
  repository: us-central1-docker.pkg.dev/main-scalr-dev/infracost/cloud-pricing

  # -- Image pull policy
  # pullPolicy: IfNotPresent
  pullPolicy: Always

  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "0.3"

# -- Any image pull secrets
imagePullSecrets: []

# -- Name override for the deployed app
nameOverride: ""

# -- Full name override for the deployed app
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Any pod annotations
podAnnotations: {}

# -- The pod security context
podSecurityContext:
  {}
  # fsGroup: 2000

# -- The container security context
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

secretAnnotations: {}

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes service port
  port: 80
  annotations:
    {}

ingress:
  # -- Enable the ingress controller resource
  enabled: false
  # -- Ingress annotation
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # extraPaths:
  #   - path: /*
  #     backend:
  #       serviceName: ssl-redirect
  #       servicePort: use-annotation
  hosts:
    - # -- Host name
      host: cloud-pricing-api.local
      paths:
        - # -- Path for host
          path: /
          # -- Path type for this specific host path. https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
          pathType: ImplementationSpecific

  # -- TLS configuration
  tls: []
  #  - secretName: cloud-pricing-api-tls
  #    hosts:
  #      - cloud-pricing-api.local

  # -- Ingress class field that replace the kubernetes.io/ingress.class annotation starting at kubernetes 1.18
  className: ""

postgresql:
  # -- Details of external PostgreSQL server, such as AWS RDS, to use (assuming you've set postgresql.enabled to false. NOTE: In this case if existingSecret is set, it will be used for external.password)
  host: ""
  port: 5432
  database: ""
  user: ""
  password: ""

api:
  # -- A 32 character API token that your Infracost CLI users will use to authenticate when calling your self-hosted Cloud Pricing API. If left empty, the helm chat will generate one for you.
  # If you ever need to rotate the API key, you can simply update `self-hosted-infracost-api-key` in the `cloud-pricing-api` secret and restart the application.
  selfHostedInfracostAPIKey: ""
  # -- If you'd rather use have it that in a secret you can leave the above empty and instead specify the name of your secret below
  existingSecretSelfHostedAPIKey: ""
  # -- Set this to true to opt-out of telemetry
  disableTelemetry: false
  # -- Set this to debug, info, warn or error
  logLevel: info

  # -- Replica count
  replicaCount: 1
  
  topologySpread:
    # -- Enable Pods spreading among zones
    enabled: false
    # -- Degree to which Pods may be unevenly distributed. See [docs](https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/#spread-constraint-definition).
    maxSkew : 1
    # -- Key of node labels
    topologyKey: topology.kubernetes.io/zone
    # -- How to deal with a Pod if it doesn't satisfy the spread constraint
    whenUnsatisfiable: ScheduleAnyway

  livenessProbe:
    # -- Enable the liveness probe
    enabled: true
    # -- The liveness probe initial delay seconds
    initialDelaySeconds: 5
    # -- The liveness probe period seconds
    periodSeconds: 5
    # -- The liveness probe timeout seconds
    timeoutSeconds: 2
    # -- The liveness probe failure threshold
    failureThreshold: 3
    # -- The liveness probe success threshold
    successThreshold: 1
  readinessProbe:
    # -- Enable the readiness probe
    enabled: true
    # -- The readiness probe initial delay seconds
    initialDelaySeconds: 5
    # -- The readiness probe period seconds
    periodSeconds: 5
    # -- The readiness probe timeout seconds
    timeoutSeconds: 2
    # -- The readiness probe failure threshold
    failureThreshold: 3
    # -- The readiness probe success threshold
    successThreshold: 1

  autoscaling:
    # -- Create a HorizontalPodAutoscaler for the API
    enabled: false
    # -- The minimum replicas for the API autoscaler
    minReplicas: 1
    # -- The maximum replicas for the API autoscaler
    maxReplicas: 10
    # -- The target CPU threshold for the API autoscaler
    targetCPUUtilizationPercentage: 80
    # -- The target memory threshold for the API autoscaler
    # targetMemoryUtilizationPercentage: 80

  # -- API resource limits and requests, our request recommendations are based on minimal requirements and the limit recommendations are based on usage in a high-traffic production environment.
  # If you are running on environments like Minikube you may wish to remove these recommendations.
  resources:
    limits:
      cpu: "1"
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 64Mi

  # -- API node selector
  nodeSelector: {}
  # -- API tolerations
  tolerations: []
  # -- API affinity
  affinity: {}
  # -- Add a sleep before the pod is stopped. This is useful if using the AWS ALB ingress controller to allow the controller to deregister the target before the pod is stopped.
  # preStopSleepSeconds: 40
  # -- The total time for the container to exit normally before being terminated. If specifying the preStopSleepSeconds, this value should be greater than that.
  # terminationGracePeriodSeconds: 60

  # -- API extra sidecar containers
  extraContainers: []
  # -- Optionally specify additional volumes
  extraVolumes: []
  #   - name: some-volume-name
  #     emptyDir: {}

  # -- Optionally specify additional volume mounts for the container
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: some-volume-name
  #     mountPath: /path/in/container
